name: compiler-hardening-check

needs:
  packages:
    - glibc-dev
    - hardening-check
    - openssf-compiler-options

inputs:
  cc:
    description: |
      CC compiler to use
    required: true
  args:
    description: |
      arguments to pass to hardening-check
    default:

pipeline:
  - name: compiler hardening check
    runs: |
      cat >hello.c <<"EOF"
      #include <alloca.h>
      #include <stdio.h>
      #include <string.h>
      int main(int argc, char* argv[]) {
          printf("hello-c");
          char buffer[5000];
          strcpy(buffer, argv[0]);
          char* dynbuffer = alloca(argc * 1000);
          strcpy(dynbuffer, argv[0]);
          return buffer[argc] + dynbuffer[argc];
      }
      EOF
      ${{inputs.cc}} -v -o hello hello.c
      out=$(./hello 1 || true)
      [ "$out" = "hello-c" ]

      arch_skip=
      # full cfprotection is x86 only for now
      if [ "${{build.arch}}" = "aarch64" ]; then
          arch_skip=--nocfprotection
      fi

      hardening-check $arch_skip ${{inputs.args}} --color hello
