package:
  name: prism
  version: 5.11.2
  epoch: 0
  description: "A set of packages for API mocking and contract testing with OpenAPI v2 and OpenAPI v3.x"
  url: https://github.com/stoplightio/prism
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - nodejs

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - nodejs
      - npm
      - ts-patch
      - yarn
  environment:
    NODE_ENV: "production"

# The prism project uses the deprecated compiler, ttsc, from the ttypescript project (https://github.com/cevek/ttypescript).
# The compiler supports typescript 4, which is the primary language of prism, but we decided to build prism with a maintained
# compiler anyway. We chose to use the tspc compiler from the ts-patch project (https://github.com/nonara/ts-patch) per the
# recommendation found in the README of ttypescript (https://github.com/cevek/ttypescript/blob/master/README.md).
pipeline:
  - uses: git-checkout
    with:
      expected-commit: f7788e25710a03628f81bb86e8d6657dc72b7c49
      repository: https://github.com/stoplightio/prism
      tag: v${{package.version}}
  # The updated tspc compiler assumes typescript 5. Since prism uses typescript 4,
  # we add a compiler option to tsconfig.json to permit features that are deprecated in typescript 5.
  - uses: patch
    with:
      patches: tsconfig.json.diff
  - runs: |
      # Create a top-level project directory to house our prism installation
      # See 'dependencies' build stage of prism/Dockerfile (https://github.com/stoplightio/prism/blob/master/Dockerfile)

      mkdir -p ${{targets.destdir}}/usr/src/prism/node_modules
      cp package.json ${{targets.destdir}}/usr/src/prism/

      # Copy subpackages into the project directory
      for pkg in core http http-server cli
      do
        mkdir -p ${{targets.destdir}}/usr/src/prism/packages/$pkg/node_modules
        cp packages/$pkg/package.json ${{targets.destdir}}/usr/src/prism/packages/$pkg/
      done
  - working-directory: ${{targets.destdir}}/usr/src/prism/
    runs: |
      # Install production dependencies for subpackages
      yarn --production
  - working-directory: /home/build/
  - runs: |
      # Build the project
      # See 'compiler' build stage of prism/Dockerfile (https://github.com/stoplightio/prism/blob/master/Dockerfile)

      # The dev packages add typescript type annotations, without which tspc won't build
      NODE_ENV=dev yarn install

      # This command is derived from the top-level package.json file. Notice we have edited it to use tspc instead of ttsc.
      tspc --build --verbose ./packages/tsconfig.build.json

      # Copy build artifacts to the target project directory
      for pkg in core http http-server cli
      do
        cp -r packages/$pkg/dist/ ${{targets.destdir}}/usr/src/prism/packages/$pkg/
      done

      # Make cli binary executable
      chmod +x ${{targets.destdir}}/usr/src/prism/packages/cli/dist/index.js

      # Create a link to the cli binary
      mkdir -p ${{targets.destdir}}/usr/bin
      ln -sf /usr/src/prism/packages/cli/dist/index.js ${{targets.destdir}}/usr/bin/prism

update:
  enabled: true
  github:
    identifier: stoplightio/prism
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - nodejs
        - npm
        - coreutils
  pipeline:
    - name: Test version
      runs: |
        ls -la /usr/src/prism/packages/cli/dist/index.js
        prism help
    - name: Test version
      runs: |
        prism --version | tee >(grep "${{package.version}}")
    - name: Test mock
      runs: |
        # From "Mocking" in prism README (https://github.com/stoplightio/prism/blob/master/README.md#mocking)
        timeout 5s prism mock https://raw.githack.com/OAI/OpenAPI-Specification/master/examples/v3.0/petstore-expanded.yaml \
        | tee >(grep "Prism is listening")
    - name: Test proxy
      runs: |
        # From "Validation Proxy" in prism README (https://github.com/stoplightio/prism/blob/master/README.md/#validation-proxy)
        timeout 5s prism proxy petstore.oas2.yaml https://petstore.swagger.io/v2 \
        | tee >(grep "Prism is listening")
